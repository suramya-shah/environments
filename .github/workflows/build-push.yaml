name: Release- build push
on:
  push:
    branches:
      - feature/make
    paths:
      - '**/version**'
jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.filter.outputs.changes }}
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: .github/filters.yaml   

  run-docker-build-push-action:
    needs: check
    strategy:
      matrix:
        run: ${{ fromJSON(needs.check.outputs.packages) }}                 
    - name: get version
      run:  | # cd .github/workflows ; ./release-script.sh         
           pwd=`pwd`;echo ${{ matrix.run }}>>$pwd/folder; s=$(cat $pwd/folder); echo "${s%/*}">>$pwd/path ; cat $pwd/folder | cut -d '-' -f2>>$pwd/ver ; echo "${s##*/}">>$pwd/dockerfile; echo "ver="; cat $pwd/ver;  echo "dockerfile="; cat $pwd/dockerfile ; echo "path="; cat $pwd/path; path=$(cat $pwd/path); if [[ $(cat $pwd/dockerfile) == 'Dockerfile' ]]; then version=$(cat $path/version); else ver=-$(cat $pwd/ver) && version=$(cat $path/version$ver); fi; echo "version=$version" >> $GITHUB_ENV ; echo "path=$path" >> $GITHUB_ENV ; cat $path/version | cut -d ':' -f1>>$pwd/dockerRepo; dockerRepo=$(cat $pwd/dockerRepo); echo "dockerRepo=$dockerRepo" >> $GITHUB_ENV ; rm $pwd/ver; rm $pwd/folder; rm $pwd/path; rm $pwd/dockerfile;
           cd $path
           make $path-env-img TAG=$version
