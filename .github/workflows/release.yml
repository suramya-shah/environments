name: Release
on:
  push:
    branches:
      - feature/release
    paths:
      - '**/version**'
jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout the current repo
        uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            binary/Dockerfile:
              - 'binary/version'
            binary/builder/Dockerfile:
              - 'binary/builder/version'
            dotnet/Dockerfile:
              - 'dotnet/version'
            python/Dockerfile:
              - 'python/version'
            python/Dockerfile-2.7:
              - 'python/version-2.7'  
  run-docker-build-push-action:
    needs: check
    strategy:
      matrix:
       run: ${{ fromJSON(needs.check.outputs.packages) }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: get version
      run: |
    
        pwd=`pwd`;echo ${{ matrix.run }}>>$pwd/folder; cat $pwd/folder | cut -d '/' -f1>>$pwd/path ;cat $pwd/folder | cut -d '-' -f2>>$pwd/ver ; s=$(cat $pwd/folder); echo "${s##*/}">>$pwd/dockerfile; echo "ver="; cat $pwd/ver;  echo "dockerfile="; cat $pwd/dockerfile ; echo "path=";cat $pwd/path; path=$(cat $pwd/path);  if [[ $(cat $pwd/dockerfile) == 'Dockerfile' ]]; then version=$(cat $path/version);  else ver=-$(cat $pwd/ver) && cd $path && version=$(cat version$ver); fi;  echo "version=$version" >> $GITHUB_ENV ;   echo "path=$path" >> $GITHUB_ENV ;rm $pwd/ver; rm $pwd/folder; rm $pwd/path; rm $pwd/dockerfile;
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and Push the docker image
      uses: docker/build-push-action@v2
      with:
        file: ${{ matrix.run }}
        context: ${{env.path}}
        tags: 263601/${{env.version}},latest
        push: true
