name: Release
on:
  push:
    branches:
      - feature/Release
    paths:
      - '**/version**'
jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout the current repo
        uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: .github/workflows/filters/version_filters.yaml        
  run-docker-build-push-action:
    needs: check
    strategy:
      matrix:
       run: ${{ fromJSON(needs.check.outputs.packages) }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}            
    - name: get version
      if: var=$(cat "steps.filter.outputs.${{ matrix.run }}")   
      run:  |            
            echo "$var"
            filter=${{matrix.run}}
            path=$(echo "${{matrix.run}}" | cut -d '/' -f1)            
            cd $path
            if $path="nodejs" ; then path=node
            if [[ "$filter" == *"builder"* ]]; then
                cd builder
                if [[ $(filter) == *"@"* ]]; then
                  ver=$(echo $filter| cut -d '@' -f2 ) 
                  version=$(cat version-$ver);
                  make $path-builder-$ver-img TAG=$version
                else
                   version=$(cat version); 
                   make $path-builder-img TAG=$version;                                         
                fi

            else
              if [[ $(filter) == *"@"* ]]; then
                  ver=$(echo $filter| cut -d '@' -f2 ) 
                  version=$(cat version-$ver);
                  make $path-env-$ver-img TAG=$version
                else
                   version=$(cat version);
                  make $path-env-img TAG=$version                    
                fi
                        
            fi

            

# make $path-env-img TAG=$version

#pwd=`pwd`;echo ${{ matrix.run }}>>$pwd/folder; s=$(cat $pwd/folder); echo "${s%/*}">>$pwd/path ; cat $pwd/folder | cut -d '-' -f2>>$pwd/ver ; echo "${s##*/}">>$pwd/dockerfile; echo "ver="; cat $pwd/ver;  echo "dockerfile="; cat $pwd/dockerfile ; echo "path="; cat $pwd/path; path=$(cat $pwd/path); if [[ $(cat $pwd/dockerfile) == 'Dockerfile' ]]; then version=$(cat $path/version); else ver=-$(cat $pwd/ver) && version=$(cat $path/version$ver); fi; echo "version=$version" >> $GITHUB_ENV ; echo "path=$path" >> $GITHUB_ENV ; cat $path/version | cut -d ':' -f1>>$pwd/dockerRepo; dockerRepo=$(cat $pwd/dockerRepo); echo "dockerRepo=$dockerRepo" >> $GITHUB_ENV ; rm $pwd/ver; rm $pwd/folder; rm $pwd/path; rm $pwd/dockerfile;
#cd $path