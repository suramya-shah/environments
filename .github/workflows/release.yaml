name: Release
on:
  push:
    branches:
      - feature/make
    paths:
      - '**/version**'
jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout the current repo
        uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            binary/Dockerfile:
              - 'binary/version'
            binary/builder/Dockerfile:
              - 'binary/builder/version'
            dotnet/Dockerfile:
              - 'dotnet/version'
            python/Dockerfile:
              - 'python/version'
            python/Dockerfile-2.7:
              - 'python/version-2.7'              
            go/Dockerfile:
              - 'go/version'
            go/Dockerfile-1.11.4:
              - 'go/version-1.11.4'
            jvm/Dockerfile:
              - 'jvm/version'
            nodejs/Dockerfile:
              - 'nodejs/version'
            perl/Dockerfile:
              - 'perl/version'
            php7/Dockerfile:
              - 'php7/version'
            ruby/Dockerfile:
              - 'ruby/version'
  run-docker-build-push-action:
    needs: check
    strategy:
      matrix:
       run: ${{ fromJSON(needs.check.outputs.packages) }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}            
    - name: get version
      run:  | # cd .github/workflows ; ./release-script.sh         
           pwd=`pwd`;echo ${{ matrix.run }}>>$pwd/folder; s=$(cat $pwd/folder); echo "${s%/*}">>$pwd/path ; cat $pwd/folder | cut -d '-' -f2>>$pwd/ver ; echo "${s##*/}">>$pwd/dockerfile; echo "ver="; cat $pwd/ver;  echo "dockerfile="; cat $pwd/dockerfile ; echo "path="; cat $pwd/path; path=$(cat $pwd/path); if [[ $(cat $pwd/dockerfile) == 'Dockerfile' ]]; then version=$(cat $path/version); else ver=-$(cat $pwd/ver) && version=$(cat $path/version$ver); fi; echo "version=$version" >> $GITHUB_ENV ; echo "path=$path" >> $GITHUB_ENV ; cat $path/version | cut -d ':' -f1>>$pwd/dockerRepo; dockerRepo=$(cat $pwd/dockerRepo); echo "dockerRepo=$dockerRepo" >> $GITHUB_ENV ; rm $pwd/ver; rm $pwd/folder; rm $pwd/path; rm $pwd/dockerfile;
           cd $path
           make $path-env-img TAG=$version
 #   - name: Build and Push the docker image
 #     uses: docker/build-push-action@v2
 #     with:
 #       file: ${{ matrix.run }}
 #       context: ${{env.path}}
 #       tags: 263601/${{env.version}},263601/${{env.dockerRepo}}:latest
 #       push: true
